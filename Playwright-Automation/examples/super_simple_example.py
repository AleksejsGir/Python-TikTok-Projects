# -*- coding: utf-8 -*-

"""
Самый простой пример использования Playwright
Этот скрипт просто открывает браузер, переходит на сайт и делает скриншот

Что такое Playwright?
--------------------
Playwright - это библиотека для автоматизации браузеров. Она позволяет управлять
браузерами (Chrome/Chromium, Firefox, Safari) с помощью кода на Python.
Вы можете открывать страницы, кликать по элементам, заполнять формы и многое другое.
"""

# Импортируем основной класс из библиотеки Playwright
# sync_playwright означает, что мы будем использовать синхронную версию API
# (то есть код будет выполняться последовательно, строка за строкой)
from playwright.sync_api import sync_playwright

# Запускаем Playwright в блоке with, чтобы автоматически закрыть ресурсы после использования
# Переменная p содержит все необходимые методы для работы с браузерами
with sync_playwright() as p:
    # Запускаем браузер Chrome/Chromium (есть также firefox и webkit для Safari)
    # headless=False означает, что браузер будет видимым (с графическим интерфейсом)
    # По умолчанию headless=True - браузер запускается в фоновом режиме без интерфейса
    browser = p.chromium.launch(headless=False)

    # Создаем новую страницу (вкладку) в браузере
    # Страница - это основной объект для взаимодействия с веб-сайтами
    page = browser.new_page()

    # Переходим на указанный URL
    # Метод goto загружает страницу и автоматически ждет, пока она не будет полностью загружена
    # Это удобнее, чем в других библиотеках, где нужно вручную добавлять время ожидания
    page.goto("https://www.python.org/")

    # Получаем заголовок страницы (текст в теге <title>)
    # и выводим его в консоль
    title = page.title()
    print(f"Заголовок страницы: {title}")

    # Делаем скриншот всей видимой части страницы и сохраняем его в файл
    # Скриншот сохраняется в текущую директорию, откуда запущен скрипт
    # Вы можете указать абсолютный путь, например: "/home/user/screenshots/python_org.png"
    page.screenshot(path="python_org.png")

    # Ждем 5 секунд (5000 миллисекунд), чтобы пользователь успел увидеть результат
    # wait_for_timeout - это метод Playwright для задержки выполнения скрипта
    # В отличие от time.sleep(), он интегрирован с внутренним таймером Playwright
    page.wait_for_timeout(5000)

    # Закрываем браузер и освобождаем все ресурсы
    # Это не обязательно внутри блока with, но является хорошей практикой
    browser.close()

# Этот код выполнится после закрытия браузера
print("Готово! Скриншот сохранен в файл python_org.png")

# Дополнительная информация для новичков:
# -------------------------------------
# 1. Чтобы запустить этот скрипт:
#    - Откройте командную строку или терминал
#    - Перейдите в папку с этим файлом: cd путь/к/папке
#    - Выполните команду: python super_simple_example.py
#
# 2. Если вы получаете ошибку "No module named playwright":
#    - Установите Playwright: pip install playwright
#    - Установите браузеры: playwright install
#
# 3. Если скриншот не сохраняется, проверьте права доступа к папке